unsat
(define-fun eq1 ((x Int) (y Int)) Int (let ((_let_0 (>= (+ x y) 2))) (let ((_let_1 (>= (+ x y) 3))) (let ((_let_2 (not _let_1))) (let ((_let_3 (* -1 y))) (let ((_let_4 (= x (+ 3 _let_3)))) (let ((_let_5 (>= (+ x y) 4))) (let ((_let_6 (not _let_5))) (let ((_let_7 (= x (+ -1 _let_3)))) (let ((_let_8 (>= (+ x y) 5))) (let ((_let_9 (not _let_8))) (let ((_let_10 (not (>= (+ x y) 6)))) (let ((_let_11 (= x (+ 1 _let_3)))) (ite (or (not _let_0) (and _let_0 (ite _let_2 _let_4 (ite _let_6 _let_7 (ite _let_9 false (ite _let_10 _let_7 false)))))) (+ 10 (* 10 x) (* 10 y)) (ite (or _let_2 (and _let_1 (ite _let_6 (= x (+ -5 _let_3)) (ite _let_9 _let_11 (ite _let_10 false _let_11))))) (+ -20 (* 20 x) (* 20 y)) (ite (or _let_6 (and _let_5 (ite _let_9 (= x (+ 7 _let_3)) (ite _let_10 _let_7 _let_4)))) (+ 30 (* 30 x) (* 30 y)) (ite (or _let_9 (and _let_8 (ite _let_10 (= x (+ -9 _let_3)) _let_11))) (+ -40 (* 40 x) (* 40 y)) (ite (or _let_10 (= x (+ 11 _let_3))) (+ 50 (* 50 x) (* 50 y)) (+ -60 (* 60 x) (* 60 y))))))))))))))))))))
