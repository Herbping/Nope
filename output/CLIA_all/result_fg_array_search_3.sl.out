unsat
(define-fun findIdx ((y1 Int) (y2 Int) (y3 Int) (k1 Int)) Int (let ((_let_0 (* -1 k1))) (let ((_let_1 (not (>= (+ y1 _let_0) 1)))) (let ((_let_2 (or (>= (+ y2 _let_0) 0) (not (>= (+ y3 _let_0) 1))))) (ite (or (>= (+ y1 (* -1 y2)) 0) (>= (+ y2 (* -1 y3)) 0)) 0 (ite (not (>= (+ y3 _let_0) 0)) 3 (ite (and (not (>= (+ y1 _let_0) 0)) (>= (+ y2 _let_0) 1)) (ite (and _let_1 _let_2) 1 3) (ite _let_2 0 (ite _let_1 2 3)))))))))
