ite: 10
y1 y2 y3 y4 y5 k1 
(define-fun findIdx ( (y1 Int) (y2 Int) (y3 Int) (y4 Int) (y5 Int) (k1 Int)) Int (ite  (or  (>=  (+  y1 (*  -1 y2)) 0) (>=  (+  y2 (*  -1 y3)) 0) (>=  (+  y3 (*  -1 y4)) 0) (>=  (+  y4 (*  -1 y5)) 0)) 0 (ite  (not  (>=  (+  y5 (*  -1 k1)) 0)) 5 (ite  (and  (not  (>=  (+  y1 (*  -1 k1)) 0)) (>=  (+  y2 (*  -1 k1)) 1)) (ite  (and  (not  (>=  (+  y1 (*  -1 k1)) 1)) (or  (>=  (+  y2 (*  -1 k1)) 0) (not  (>=  (+  y3 (*  -1 k1)) 1))) (or  (>=  (+  y3 (*  -1 k1)) 0) (not  (>=  (+  y4 (*  -1 k1)) 1))) (or  (>=  (+  y4 (*  -1 k1)) 0) (not  (>=  (+  y5 (*  -1 k1)) 1)))) 1 5) (ite  (and  (not  (>=  (+  y2 (*  -1 k1)) 0)) (>=  (+  y3 (*  -1 k1)) 1)) (ite  (or  (>=  (+  y1 (*  -1 k1)) 1) (and  (not  (>=  (+  y3 (*  -1 k1)) 0)) (>=  (+  y4 (*  -1 k1)) 1)) (and  (not  (>=  (+  y4 (*  -1 k1)) 0)) (>=  (+  y5 (*  -1 k1)) 1))) 5 2) (ite  (and  (not  (>=  (+  y3 (*  -1 k1)) 0)) (>=  (+  y4 (*  -1 k1)) 1)) (ite  (or  (>=  (+  y1 (*  -1 k1)) 1) (and  (not  (>=  (+  y4 (*  -1 k1)) 0)) (>=  (+  y5 (*  -1 k1)) 1))) 5 3) (ite  (or  (>=  (+  y4 (*  -1 k1)) 0) (not  (>=  (+  y5 (*  -1 k1)) 1))) 0 (ite  (not  (>=  (+  y1 (*  -1 k1)) 1)) 4 5))))))))