unsat
(define-fun eq1 ((x Int) (y Int) (z Int)) Int (let ((_let_0 (>= (+ x y) 1))) (let ((_let_1 (not (>= (+ x z) 1)))) (let ((_let_2 (= x y))) (let ((_let_3 (>= (+ y z) 1))) (let ((_let_4 (not _let_3))) (ite (or (and _let_0 (or (>= (+ x z) 1) (and _let_2 _let_4))) (and (= x z) _let_4)) (+ 1 x) (ite (or (and _let_0 (or (and _let_2 _let_3) _let_1)) (and (= y z) _let_1)) (+ 1 y) (+ 1 z)))))))))
