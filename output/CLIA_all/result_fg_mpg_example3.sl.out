unsat
(define-fun eq2 ((x Int) (y Int) (z Int)) Int (let ((_let_0 (>= z 2))) (let ((_let_1 (* 2 x))) (let ((_let_2 (* -1 y))) (let ((_let_3 (>= (+ _let_1 _let_2) 1))) (let ((_let_4 (not _let_3))) (let ((_let_5 (= x (+ -4 (* 5 y) (* -16 z))))) (let ((_let_6 (not _let_0))) (let ((_let_7 (>= (+ _let_1 _let_2 (* -2 z)) 0))) (let ((_let_8 (* 7 z))) (let ((_let_9 (= _let_8 (+ -5 (* -9 x) (* 8 y))))) (let ((_let_10 (not _let_7))) (let ((_let_11 (* 3 x))) (let ((_let_12 (* 3 y))) (let ((_let_13 (* -9 z))) (let ((_let_14 (= _let_12 (+ 1 (* 8 x) _let_13)))) (let ((_let_15 (* 9 y))) (let ((_let_16 (>= (+ _let_15 (* -32 z)) 9))) (ite (or (and _let_0 (or _let_4 (and _let_5 _let_16))) (and _let_6 (or (and _let_7 _let_9) (and _let_10 (= _let_11 (+ 2 (* -7 y) (* 4 z))))))) (+ 9 _let_11 (* -5 y) _let_8) (ite (or (and _let_0 (or (and _let_5 (not _let_16)) _let_3)) (and _let_6 (or (and _let_7 _let_14) (and _let_10 (= (* 7 x) (+ (* -9 y) (* -8 z))))))) (+ 5 _let_1 _let_13) (ite (or (and _let_0 (or (and _let_4 _let_9) (and _let_3 _let_14))) (and _let_6 (or _let_7 (and (= z (+ 1 (* 15 x) (* 6 y))) (>= (+ (* 28 x) (* 13 y)) -1))))) (+ 4 (* -6 x) _let_12) (+ 5 (* 9 x) _let_15 (* -1 z)))))))))))))))))))))))
